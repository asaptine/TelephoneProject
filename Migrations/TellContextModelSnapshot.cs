// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekt.DB;

namespace Projekt.Migrations
{
    [DbContext(typeof(TellContext))]
    partial class TellContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Projekt.Models.AppOperator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DialingNumber")
                        .HasMaxLength(20);

                    b.Property<int>("LocationId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("AppOperators");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            DialingNumber = 968630778,
                            LocationId = 1,
                            Name = "vip"
                        },
                        new
                        {
                            Id = 5,
                            DialingNumber = 968640778,
                            LocationId = 2,
                            Name = "A1"
                        },
                        new
                        {
                            Id = 4,
                            DialingNumber = 968610778,
                            LocationId = 3,
                            Name = "Telekom"
                        });
                });

            modelBuilder.Entity("Projekt.Models.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("Date");

                    b.Property<decimal>("FullPriceWithTax")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("PhoneId");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("PhoneId");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1000m,
                            Currency = "HRK",
                            Date = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullPriceWithTax = 1250m,
                            PhoneId = 1,
                            Tax = 25m
                        },
                        new
                        {
                            Id = 2,
                            Amount = 100m,
                            Currency = "HRK",
                            Date = new DateTime(2019, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullPriceWithTax = 125m,
                            PhoneId = 2,
                            Tax = 25m
                        },
                        new
                        {
                            Id = 3,
                            Amount = 1000m,
                            Currency = "HRK",
                            Date = new DateTime(2019, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullPriceWithTax = 1200m,
                            PhoneId = 1,
                            Tax = 20m
                        });
                });

            modelBuilder.Entity("Projekt.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("LocationId");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1879, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "albein@hotmail.com",
                            FirstName = "Albert",
                            LastName = "Einstein",
                            LocationId = 1
                        },
                        new
                        {
                            Id = 10,
                            BirthDate = new DateTime(1996, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tin_stuban@hotmail.com",
                            FirstName = "Valentin",
                            LastName = "Štuban",
                            LocationId = 2
                        },
                        new
                        {
                            Id = 9,
                            BirthDate = new DateTime(1999, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Marko_stuban@hotmail.com",
                            FirstName = "Marko",
                            LastName = "Štuban",
                            LocationId = 3
                        });
                });

            modelBuilder.Entity("Projekt.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Croatia"
                        },
                        new
                        {
                            Id = 2,
                            Name = "USA"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Germany"
                        });
                });

            modelBuilder.Entity("Projekt.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Mraclin"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Name = "New York"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 3,
                            Name = "Berlin"
                        });
                });

            modelBuilder.Entity("Projekt.Models.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId");

                    b.Property<DateTime>("RegistrationDate");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Phones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            RegistrationDate = new DateTime(2018, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 9,
                            RegistrationDate = new DateTime(2019, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 10,
                            RegistrationDate = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Projekt.Models.PhoneOperator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppOperatorId");

                    b.Property<int>("PhoneId");

                    b.Property<string>("Sim");

                    b.HasKey("Id");

                    b.HasIndex("AppOperatorId");

                    b.HasIndex("PhoneId");

                    b.ToTable("PhoneOperators");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppOperatorId = 6,
                            PhoneId = 1,
                            Sim = "nano"
                        },
                        new
                        {
                            Id = 2,
                            AppOperatorId = 5,
                            PhoneId = 2,
                            Sim = "micro"
                        },
                        new
                        {
                            Id = 3,
                            AppOperatorId = 4,
                            PhoneId = 3,
                            Sim = "regular"
                        });
                });

            modelBuilder.Entity("Projekt.Models.AppOperator", b =>
                {
                    b.HasOne("Projekt.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Projekt.Models.Bill", b =>
                {
                    b.HasOne("Projekt.Models.Phone", "Phone")
                        .WithMany()
                        .HasForeignKey("PhoneId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Projekt.Models.Client", b =>
                {
                    b.HasOne("Projekt.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Projekt.Models.Location", b =>
                {
                    b.HasOne("Projekt.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Projekt.Models.Phone", b =>
                {
                    b.HasOne("Projekt.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Projekt.Models.PhoneOperator", b =>
                {
                    b.HasOne("Projekt.Models.AppOperator", "AppOperator")
                        .WithMany("PhoneOperators")
                        .HasForeignKey("AppOperatorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Projekt.Models.Phone", "Phone")
                        .WithMany("PhoneOperators")
                        .HasForeignKey("PhoneId")
                        .OnDelete(DeleteBehavior.SetNull);
                });
#pragma warning restore 612, 618
        }
    }
}
